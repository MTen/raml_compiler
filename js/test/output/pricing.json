{
  "type": "object",
  "$schema": "http://json-schema.org/schema",
  "properties": {
    "pricingID": {
      "type": "string"
    },
    "cost": {
      "type": "number",
      "description": "The final cost of the order after taxes, charges, and discounts have been applied."
    },
    "taxAmount": {
      "type": "number",
      "description": "The total tax charged to the order."
    },
    "discountAmount": {
      "type": "number",
      "description": "The total value of the discounts applied to the order."
    },
    "discounts": {
      "type": "array",
      "items": {
        "type": "object",
        "$schema": "http://json-schema.org/schema",
        "properties": {
          "discountID": {
            "type": "string"
          },
          "itemIDs": {
            "type": "array",
            "description": "An array of itemIDs that describe which items this discount is associated with."
          },
          "type": {
            "type": "string",
            "description": "Specify AO, PO, DF, CF, SP"
          },
          "earnLevelType": {
            "type": "string",
            "description": "Specify D, Q, or NA"
          },
          "earnLevelAmount": {
            "type": "number",
            "description": "The amount that must be spent to earn a discount"
          },
          "earnLevelQuantity": {
            "type": "integer",
            "description": "The number of items that must be purchased to earn a discount"
          },
          "amountOff": {
            "type": "number",
            "description": "Price off a single item"
          },
          "percentOff": {
            "type": "number",
            "description": "Percent off a single item"
          },
          "substitutePrice": {
            "type": "number"
          },
          "startDate": {
            "type": "string",
            "description": "Preferred format: yyyy-MM-dd HH:mm:ss."
          },
          "endDate": {
            "type": "string",
            "description": "Preferred format: yyyy-MM-dd HH:mm:ss."
          },
          "discountAmount": {
            "type": "number",
            "description": "The total value of the discount."
          },
          "description": {
            "type": "string",
            "description": "The description of the user which may be displayed to the user."
          }
        },
        "required": [
          "discountID",
          "itemID",
          "type",
          "earnLevelType",
          "startDate"
        ]
      }
    },
    "orderItems": {
      "type": "array",
      "items": {
        "type": "object",
        "$schema": "http://json-schema.org/schema",
        "properties": {
          "orderItemID": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "description": "The cost of the orderItem."
          },
          "itemID": {
            "type": "string",
            "description": "The ID of the associated item. Note, either item or itemID is required."
          },
          "merchandiseID": {
            "type": "string",
            "description": "The ID of the associated merchandise."
          },
          "giftID": {
            "type": "string",
            "description": "The ID of the associated gift."
          },
          "itemCount": {
            "type": "integer",
            "description": "The number of items ordered."
          },
          "pricingCondition": {
            "type": "string",
            "description": "The condition by which this object was priced."
          },
          "item": {
            "description": "The associated item. Note, either item or itemID is required.",
            "type": "object",
            "$schema": "http://json-schema.org/schema",
            "properties": {
              "itemID": {
                "type": "string"
              },
              "brandID": {
                "type": "string",
                "description": "The item's parent brand."
              },
              "brandName": {
                "type": "string",
                "description": "The name of the item's parent brand."
              },
              "name": {
                "type": "string",
                "description": "A name for the item displayable to the user."
              },
              "price": {
                "type": "object",
                "$schema": "http://json-schema.org/schema",
                "properties": {
                  "priceID": {
                    "type": "string"
                  },
                  "unitPrice": {
                    "type": "number",
                    "description": "The top-line price for the item."
                  }
                },
                "required": [
                  "priceID",
                  "unitPrice"
                ]
              },
              "package": {
                "type": "object",
                "$schema": "http://json-schema.org/schema",
                "properties": {
                  "packageID": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "itemCount": {
                    "type": "integer",
                    "description": "The number of bottles/cans/kegs in a single container. If a package contains 2 6-packs, 6."
                  },
                  "itemSize": {
                    "type": "number",
                    "description": "The volume of a single keg, bottle, or can in a package."
                  },
                  "returnable": {
                    "type": "boolean",
                    "description": "Marks whether the package may be returned or not."
                  },
                  "unitCount": {
                    "type": "number",
                    "description": "The number of containers in a package. If a package contains 2 6-packs, 2."
                  },
                  "unitOfMeasurement": {
                    "type": "string",
                    "description": "OZ, l, etc."
                  },
                  "containerName": {
                    "type": "string",
                    "description": "Keg, Bottle, Can, etc."
                  }
                },
                "required": [
                  "packageID",
                  "itemCount",
                  "itemSize",
                  "unitCount",
                  "unitOfMeasurement",
                  "containerName"
                ]
              }
            },
            "required": [
              "itemID",
              "brandID",
              "name",
              "brandName"
            ]
          }
        },
        "required": [
          "orderItemID",
          "cost",
          "itemCount"
        ]
      }
    }
  },
  "required": [
    "pricingID",
    "cost",
    "orderItems"
  ]
}